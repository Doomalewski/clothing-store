@model clothing_store.ViewModels.ProductListViewModel

@{
    ViewData["Title"] = "Products";
}
<form method="get" asp-controller="Home" asp-action="Products" class="search-form">
    <div class="input-group">
        <input type="text" name="searchQuery" class="form-control search-input" placeholder="Search for products..." value="@ViewData["SearchQuery"]" />
        <button class="btn btn-dark search-btn" type="submit">Search</button>
    </div>
</form>
<div id="product-section">
    @await Html.PartialAsync("_ProductListPartial", Model.Products)
</div>

<div class="pagination-container">
    <nav aria-label="Product navigation">
        <ul class="pagination justify-content-center">
            @if (Model.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Products", new { pageNumber = Model.CurrentPage - 1, pageSize = Model.PageSize })">Previous</a>
                </li>
            }

            <li class="page-item disabled">
                <span class="page-link">Page @Model.CurrentPage of @Model.TotalPages</span>
            </li>

            @if (Model.CurrentPage < Model.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Products", new { pageNumber = Model.CurrentPage + 1, pageSize = Model.PageSize })">Next</a>
                </li>
            }
        </ul>
    </nav>
</div>
